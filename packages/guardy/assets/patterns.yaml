# Guardy Secret Detection Patterns
# This file contains all patterns for detecting secrets, API keys, and sensitive data
# 
# Pattern Classification:
# - specific: High-confidence patterns with reliable keywords (e.g., "sk_live_")
# - contextual: Patterns needing context analysis (e.g., generic API keys)  
# - always_run: Patterns without reliable keywords (e.g., entropy-only)
#
# Priority: 1-10 (higher = run first, 9-10 for critical modern services)

patterns:
  # Modern AI API Keys (High Priority)
  - name: "OpenAI API Key (New Format)"
    regex: "sk-proj-[\\dA-Za-z]{43,64}"
    description: "OpenAI API keys (new project-based format)"
    classification: "specific"
    keywords: ["sk-proj-"]
    priority: 9

  - name: "OpenAI API Key (Legacy)"
    regex: "sk-[\\dA-Za-z]{43,51}"
    description: "OpenAI API keys (legacy format)"
    classification: "specific"
    keywords: ["sk-"]
    priority: 9

  - name: "Anthropic Claude API Key"
    regex: "sk-ant-api\\d{2}-[\\dA-Za-z_-]{43,95}"
    description: "Anthropic Claude API keys"
    classification: "specific"
    keywords: ["sk-ant-api"]
    priority: 9

  - name: "Anthropic Admin API Key"
    regex: "sk-ant-admin-[\\dA-Za-z_-]{43,95}"
    description: "Anthropic Admin API keys"
    classification: "specific"
    keywords: ["sk-ant-admin"]
    priority: 9

  - name: "Hugging Face Token"
    regex: "hf_[\\dA-Za-z]{37}"
    description: "Hugging Face API tokens"
    classification: "specific"
    keywords: ["hf_"]
    priority: 9

  - name: "Cohere API Key"
    regex: "co\\.[\\dA-Za-z_-]{20,}"
    description: "Cohere API keys"
    classification: "specific"
    keywords: ["co."]
    priority: 8

  - name: "Replicate API Token"
    regex: "r8_[\\dA-Za-z]{40,}"
    description: "Replicate API tokens"
    classification: "specific"
    keywords: ["r8_"]
    priority: 8

  # Version Control & Git
  - name: "GitHub Token"
    regex: "(?:gh[oprsu]|github_pat)_[\\dA-Za-z_]{36}"
    description: "GitHub personal access tokens"
    classification: "specific"
    keywords: ["ghp_", "gho_", "ghr_", "ghs_", "ghu_", "github_pat"]
    priority: 8

  - name: "GitLab Token"
    regex: "glpat-[\\dA-Za-z_=-]{20,22}"
    description: "GitLab personal access tokens"
    classification: "specific"
    keywords: ["glpat-"]
    priority: 8

  # Cloud Providers (High Priority)
  - name: "AWS Access Key"
    regex: "AKIA[0-9A-Z]{16}"
    description: "Amazon Web Services access keys"
    classification: "specific"
    keywords: ["AKIA"]
    priority: 8

  - name: "AWS Secret Key"
    regex: "(?i:aws.{0,20}secret.{0,20}key.{0,20}[:=]\\s*['\"]?[0-9a-zA-Z/+=]{40}['\"]?)"
    description: "Amazon Web Services secret access keys"
    classification: "contextual"
    keywords: ["aws", "secret", "key"]
    priority: 8

  - name: "GCP API Key"
    regex: "AIzaSy[\\dA-Za-z_-]{33}"
    description: "Google Cloud Platform API keys"
    classification: "specific"
    keywords: ["AIzaSy"]
    priority: 8

  - name: "Azure Storage Key"
    regex: "AccountKey=[\\d+/=A-Za-z]{88}"
    description: "Azure Storage account keys"
    classification: "specific"
    keywords: ["AccountKey="]
    priority: 8

  - name: "Azure Client Secret"
    regex: "(?i:azure.{0,20}client.{0,20}secret.{0,20}[:=]\\s*['\"]?[0-9a-zA-Z.~_-]{34,40}['\"]?)"
    description: "Azure application client secrets"
    classification: "contextual"
    keywords: ["azure", "client", "secret"]
    priority: 7

  - name: "Alibaba Access Key"
    regex: "(LTAI)[\\dA-Za-z]{12,20}"
    description: "Alibaba Cloud access keys"
    classification: "specific"
    keywords: ["LTAI"]
    priority: 7

  # Payment Processors
  - name: "Stripe API Key"
    regex: "[rs]k_live_[\\dA-Za-z]{24,247}"
    description: "Stripe API keys (live environment)"
    classification: "specific"
    keywords: ["sk_live_", "rk_live_"]
    priority: 8

  - name: "Square API Key"
    regex: "sq0[ic][a-z]{2}-[\\dA-Za-z_-]{22,50}"
    description: "Square API keys"
    classification: "specific"
    keywords: ["sq0"]
    priority: 7

  - name: "Square Token"
    regex: "EAAA[\\dA-Za-z+=-]{60}"
    description: "Square access tokens"
    classification: "specific"
    keywords: ["EAAA"]
    priority: 7

  # Communication & Messaging
  - name: "Slack Token"
    regex: "xox[aboprs]-(?:\\d+-)+[\\da-z]+"
    description: "Slack API tokens"
    classification: "specific"
    keywords: ["xox"]
    priority: 7

  - name: "Slack Webhook"
    regex: "https://hooks\\.slack\\.com/services/T[\\dA-Za-z_]+/B[\\dA-Za-z_]+/[\\dA-Za-z_]+"
    description: "Slack incoming webhook URLs"
    classification: "specific"
    keywords: ["hooks.slack.com"]
    priority: 7

  - name: "SendGrid API Key"
    regex: "SG\\.[\\dA-Za-z_-]{22}\\.[\\dA-Za-z_-]{43}"
    description: "SendGrid API keys"
    classification: "specific"
    keywords: ["SG."]
    priority: 7

  - name: "Twilio API Key"
    regex: "(?:AC|SK)[\\da-z]{32}"
    description: "Twilio API keys and tokens"
    classification: "contextual"
    keywords: ["AC", "SK"]
    priority: 6

  - name: "Mailchimp API Key"
    regex: "[\\da-f]{32}-us\\d{1,2}"
    description: "Mailchimp API keys"
    classification: "contextual"
    keywords: ["us"]
    priority: 5

  # Package Managers & Registries
  - name: "npm Token (Modern)"
    regex: "npm_[\\dA-Za-z]{36}"
    description: "npm authentication tokens (modern format)"
    classification: "specific"
    keywords: ["npm_"]
    priority: 7

  - name: "npm Token (Legacy)"
    regex: "//.+/:_authToken=[\\dA-Za-z_-]+"
    description: "npm authentication tokens (legacy format)"
    classification: "specific"
    keywords: ["_authToken="]
    priority: 7

  # Cryptographic Keys & Certificates
  - name: "Private Key (Comprehensive)"
    regex: "(?s)-----BEGIN[ A-Z0-9_-]{0,100}PRIVATE KEY(?: BLOCK)?-----[\\s\\S]{64,}?-----END[ A-Z0-9_-]{0,100}PRIVATE KEY(?: BLOCK)?-----"
    description: "Comprehensive private key detection including RSA, DSA, EC, OpenSSH, PGP with full content"
    classification: "specific"
    keywords: ["-----BEGIN", "PRIVATE KEY"]
    priority: 8

  - name: "SSL/TLS Certificate"
    regex: "(?s)-----BEGIN[ A-Z0-9_-]{0,100}CERTIFICATE[ A-Z0-9_-]{0,100}-----[\\s\\S]{64,}?-----END[ A-Z0-9_-]{0,100}CERTIFICATE[ A-Z0-9_-]{0,100}-----"
    description: "SSL/TLS certificates and certificate signing requests with full content"
    classification: "specific"
    keywords: ["-----BEGIN", "CERTIFICATE"]
    priority: 6

  - name: "Certificate Signing Request"
    regex: "(?s)-----BEGIN[ A-Z0-9_-]{0,100}CERTIFICATE REQUEST[ A-Z0-9_-]{0,100}-----[\\s\\S]{64,}?-----END[ A-Z0-9_-]{0,100}CERTIFICATE REQUEST[ A-Z0-9_-]{0,100}-----"
    description: "Certificate Signing Requests (CSR) with full content"
    classification: "specific"
    keywords: ["-----BEGIN", "CERTIFICATE REQUEST"]
    priority: 6

  - name: "SSH Public Key Content"
    regex: "ssh-(?:rsa|dss|ed25519|ecdsa-sha2-nistp(?:256|384|521))\\s+[A-Za-z0-9+/]{100,}={0,2}"
    description: "SSH public key content in authorized_keys format"
    classification: "specific"
    keywords: ["ssh-rsa", "ssh-dss", "ssh-ed25519", "ssh-ecdsa"]
    priority: 6

  - name: "Age Secret Key"
    regex: "AGE-SECRET-KEY-1[\\dA-Z]{58}"
    description: "Age encryption secret keys"
    classification: "specific"
    keywords: ["AGE-SECRET-KEY"]
    priority: 7

  - name: "PuTTY Private Key"
    regex: "PuTTY-User-Key-File-\\d+"
    description: "PuTTY private key files"
    classification: "specific"
    keywords: ["PuTTY-User-Key"]
    priority: 6

  - name: "1Password Secret Key"
    regex: "op://[\\dA-Za-z/\\-]{10,}"
    description: "1Password secret references"
    classification: "specific"
    keywords: ["op://"]
    priority: 7

  # JWT & Authentication Tokens
  - name: "JWT/JWE Token"
    regex: "\\beyJ[\\dA-Za-z=_-]+(?:\\.[\\dA-Za-z=_-]{3,}){1,4}"
    description: "JSON Web Tokens and JSON Web Encryption"
    classification: "specific"
    keywords: ["eyJ"]
    priority: 7

  # Database Connection Strings
  - name: "MongoDB Connection String"
    regex: "mongodb(\\+srv)?://[^\\s'\"]+:[^\\s'\"]+@[^\\s'\"]+"
    description: "MongoDB connection strings with credentials"
    classification: "specific"
    keywords: ["mongodb://", "mongodb+srv://"]
    priority: 7

  - name: "PostgreSQL Connection String"
    regex: "postgres(ql)?://[^\\s'\"]+:[^\\s'\"]+@[^\\s'\"]+"
    description: "PostgreSQL connection strings with credentials"
    classification: "specific"
    keywords: ["postgresql://", "postgres://"]
    priority: 7

  - name: "MySQL Connection String"
    regex: "mysql://[^\\s'\"]+:[^\\s'\"]+@[^\\s'\"]+"
    description: "MySQL connection strings with credentials"
    classification: "specific"
    keywords: ["mysql://"]
    priority: 7

  # URLs with Credentials
  - name: "URL with Credentials"
    regex: "[A-Za-z]+://\\S{3,50}:(\\S{8,50})@[\\dA-Za-z#%&+./:=?_~-]+"
    description: "URLs containing embedded credentials"
    classification: "contextual"
    keywords: ["://"]
    priority: 6

  # Additional Services
  - name: "Airtable API Key"
    regex: "key[\\dA-Za-z]{14}"
    description: "Airtable API keys"
    classification: "contextual"
    keywords: ["key"]
    priority: 5

  - name: "Intra42 Token"
    regex: "s-s4t2(?:af|ud)-[\\da-f]{64}"
    description: "42 School Intra API tokens"
    classification: "specific"
    keywords: ["s-s4t2"]
    priority: 6

  - name: "Mistral AI API Key"
    regex: "[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}"
    description: "Mistral AI API keys (UUID format)"
    classification: "contextual"
    keywords: []
    priority: 5

  # Private Key Header (legacy compatibility)
  - name: "Private Key Header"
    regex: "-----BEGIN[ A-Z0-9_-]{0,100}PRIVATE KEY(?: BLOCK)?-----"
    description: "Private key headers (for backward compatibility)"
    classification: "specific"
    keywords: ["-----BEGIN", "PRIVATE KEY"]
    priority: 3

  # Generic Secret Pattern (main workhorse for unknown formats)
  - name: "Generic Secret Pattern"
    regex: "(?i:key|token|secret|password|api|auth|credential|pass)\\w*[\"']?]?\\s*(?:[:=]|:=|=>|<-|>)\\s*[\\t \"'`]?([\\w+./=~\\-\\\\`^]{15,90})"
    description: "Generic pattern for detecting potential secrets based on context keywords"
    classification: "always_run"
    keywords: ["key", "token", "secret", "password", "api", "auth", "credential", "pass"]
    priority: 2